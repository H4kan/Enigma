{"version":3,"sources":["components/Lever.js","components/ListLevers.js","components/Timer.js","components/Game.js","components/StartWindow.js","components/Controller.js","components/Menu.js","components/EndWindow.js","components/App.js","serviceWorker.js","index.js"],"names":["Lever","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","id","changeState","handleClick","e","preventDefault","target","classList","toggle","setState","isActive","state","i","complexity","boundaries","active","classString","btnClass","react_default","a","createElement","className","onClick","Component","ListLevers","name","size","activeList","map","element","components_Lever","key","Timer","concat","time","hours","minutes","seconds","Game","chaos","generateTab","push","index","list","createBoundaries","length","random","Math","floor","randomTab","tab","checkWin","interval","setInterval","updateTime","j","clearInterval","setTimeout","endF","components_Timer","components_ListLevers","StartWindow","click","Controller","_this2","type","setter","Menu","components_Controller","init","EndWindow","restart","resetTime","resetParameters","App","display","handleStartClick","setPlay","setParameters","param","endGame","components_Game","components_Menu","components_EndWindow","components_StartWindow","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0WA2DeA,iCApDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,GAAKP,EAAKD,MAAMQ,GARGP,EASnBQ,YAAcR,EAAKD,MAAMS,YATNR,EAWnBS,YAAc,SAAAC,GACVA,EAAEC,iBACFD,EAAEE,OAAOC,UAAUC,OAAO,UAC1Bd,EAAKe,SAAS,CAAEC,UAAWhB,EAAKiB,MAAMD,WACtChB,EAAKQ,YAAYR,EAAKO,IACtB,IAAK,IAAIW,EAAI,EAAGA,EAAIlB,EAAKD,MAAMoB,WAAYD,IAEvClB,EAAKQ,YAAYR,EAAKD,MAAMqB,WAAWF,KAf3ClB,EAAKiB,MAAQ,CACTD,SAAUhB,EAAKD,MAAMsB,QAJVrB,iIA4BXG,KAAKc,MAAMD,WAAab,KAAKJ,MAAMsB,QACnClB,KAAKY,SAAS,CACVC,SAAUb,KAAKJ,MAAMsB,0CAO7B,IAAMC,EAAcnB,KAAKc,MAAMD,SAAW,eAAiB,QACrDO,EAAWpB,KAAKc,MAAMD,SAAW,gBAAkB,SACzD,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,IAChBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEXH,EAAAC,EAAAC,cAAA,UAAQE,QAASzB,KAAKM,YAAakB,UAAWJ,aA9C9CM,cCaLC,EAfI,SAAC/B,GAChB,IAAMgC,EAAOhC,EAAMiC,KAAO,GAAK,iBAAmB,aAClD,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,GACXhC,EAAMkC,WAAWC,IAAI,SAACC,EAAS5B,GAAV,OAAiBiB,EAAAC,EAAAC,cAACU,EAAD,CACnCC,IAAK9B,EACLA,GAAIA,EACJc,OAAQc,EACR3B,YAAaT,EAAMS,YAAaY,WAAYrB,EAAMqB,WAAWb,GAC7DY,WAAYpB,EAAMoB,iBCAnBmB,EAVD,SAACvC,GAGX,OACIyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,YAAAa,OAAOxC,EAAMyC,KAAKC,MAAQ,GAAK,IAAM1C,EAAMyC,KAAKC,MAAQ1C,EAAMyC,KAAKC,MAAnE,KAAAF,OAA4ExC,EAAMyC,KAAKE,QAAU,GAAK,IAAM3C,EAAMyC,KAAKE,QAAU3C,EAAMyC,KAAKE,QAA5I,KAAAH,OAAuJxC,EAAMyC,KAAKG,QAAU,GAAK,IAAM5C,EAAMyC,KAAKG,QAAU5C,EAAMyC,KAAKG,YC6FpNC,6MA5FX3B,MAAQ,CACJgB,WAAY,GACZd,WAAYnB,EAAKD,MAAMoB,WACvBC,WAAY,GACZY,KAAMhC,EAAKD,MAAMiC,KACjBa,MAAO7C,EAAKD,MAAM8C,SAEtBC,YAAc,WAEV,IADA,IAAMb,EAAa,GACVf,EAAI,EAAGA,EAAIlB,EAAKiB,MAAMe,KAAMd,IACjCe,EAAWc,MAAK,GACpB/C,EAAKe,SAAS,CAAEkB,kBAGpBzB,YAAc,SAACwC,GACX,IAAMC,EAAOjD,EAAKiB,MAAMgB,WACxBgB,EAAKD,IAAUhD,EAAKiB,MAAMgB,WAAWe,GACrChD,EAAKe,SAAS,CAAEkB,WAAYgB,OAEhCC,iBAAmB,SAACF,GAGhB,IAFA,IAAMG,EAASnD,EAAKiB,MAAMe,KACtBZ,EAAa,GACRF,EAAI,EAAGA,EAAIlB,EAAKiB,MAAME,WAAYD,IAAK,CAE5C,IADA,IAAIkC,EAASJ,EACNI,IAAWJ,GACdI,EAASC,KAAKC,MAAMD,KAAKD,SAAWD,GACxC/B,EAAW2B,KAAKK,GAGpB,OAAOhC,KAEXmC,UAAY,WAER,IADA,IAAIC,EAAM,GACDtC,EAAI,EAAGA,EAAIlB,EAAKiB,MAAM4B,MAAO3B,IAClCsC,EAAIT,KAAKM,KAAKC,MAAMD,KAAKD,SAAWpD,EAAKiB,MAAMe,OACnD,OAAOwB,KAEXC,SAAW,WACP,IAAK,IAAIvC,EAAI,EAAGA,EAAIlB,EAAKiB,MAAMgB,WAAWkB,OAAQjC,IAC9C,IAAiC,IAA7BlB,EAAKiB,MAAMgB,WAAWf,GACtB,OAAO,EACf,OAAO,uFAGPf,KAAK2C,cACL,IAAK,IAAI5B,EAAI,EAAGA,EAAIf,KAAKc,MAAMe,KAAMd,IACjCf,KAAKc,MAAMG,WAAW2B,KAAK5C,KAAK+C,iBAAiBhC,IACrDf,KAAKuD,SAAWC,YAAYxD,KAAKJ,MAAM6D,WAAY,iDAMnD,IADA,IAAML,EAAYpD,KAAKoD,YACdrC,EAAI,EAAGA,EAAIf,KAAKc,MAAM4B,MAAO3B,IAAK,CACvCf,KAAKK,YAAY+C,EAAUrC,IAC3B,IAAK,IAAI2C,EAAI,EAAGA,EAAI1D,KAAKc,MAAME,WAAY0C,IACvC1D,KAAKK,YAAYL,KAAKc,MAAMG,WAAWmC,EAAUrC,IAAI2C,kDAQzD1D,KAAKsD,aACLK,cAAc3D,KAAKuD,UACnBK,WAAW5D,KAAKJ,MAAMiE,KAAM,uCAQhC,OAEIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACuC,EAAD,CAAOzB,KAAMrC,KAAKJ,MAAMyC,OACxBhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,gCACAH,EAAAC,EAAAC,cAACwC,EAAD,CACI1D,YAAaL,KAAKK,YAClByB,WAAY9B,KAAKc,MAAMgB,WACvBb,WAAYjB,KAAKc,MAAMG,WACvBD,WAAYhB,KAAKc,MAAME,WACvBa,KAAM7B,KAAKc,MAAMe,eArFlBH,aCaJsC,SAdK,SAACpE,GACjB,OACIyB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,UACIE,QAAS7B,EAAMqE,MACfzC,UAAU,YCwFX0C,cAlGX,SAAAA,EAAYtE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACfrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KACDkB,MAAQ,CACTe,KAAM,GACNa,MAAO,GACP1B,WAAY,GALDnB,sHAWV,IAAAsE,EAAAnE,KACL,MAAwB,SAApBA,KAAKJ,MAAMwE,KAGP/C,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACT0C,EAAKrD,MAAMe,KAAO,IAClBsC,EAAKvE,MAAMyE,OAAOF,EAAKrD,MAAMe,KAAO,EAAG,QACvCsC,EAAKvD,SAAS,CACViB,KAAMsC,EAAKrD,MAAMe,KAAO,OAJpC,KASAR,EAAAC,EAAAC,cAAA,YAAOvB,KAAKc,MAAMe,MAClBR,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACT0C,EAAKrD,MAAMe,KAAO,KAClBsC,EAAKvE,MAAMyE,OAAOF,EAAKrD,MAAMe,KAAO,EAAG,QACvCsC,EAAKvD,SAAS,CACViB,KAAMsC,EAAKrD,MAAMe,KAAO,OAJpC,OAYa,UAApB7B,KAAKJ,MAAMwE,KAGZ/C,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACT0C,EAAKrD,MAAM4B,MAAQ,KACnByB,EAAKvE,MAAMyE,OAAOF,EAAKrD,MAAM4B,MAAQ,EAAG,SACxCyB,EAAKvD,SAAS,CACV8B,MAAOyB,EAAKrD,MAAM4B,MAAQ,OAJtC,KASArB,EAAAC,EAAAC,cAAA,YAAOvB,KAAKc,MAAM4B,OAClBrB,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACT0C,EAAKrD,MAAM4B,MAAQ,MACnByB,EAAKvE,MAAMyE,OAAOF,EAAKrD,MAAM4B,MAAQ,EAAG,SACxCyB,EAAKvD,SAAS,CACV8B,MAAOyB,EAAKrD,MAAM4B,MAAQ,OAJtC,OAcZrB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACT0C,EAAKrD,MAAME,WAAa,IACxBmD,EAAKvE,MAAMyE,OAAOF,EAAKrD,MAAME,WAAa,EAAG,cAC7CmD,EAAKvD,SAAS,CACVI,WAAYmD,EAAKrD,MAAME,WAAa,OAJhD,KAQAK,EAAAC,EAAAC,cAAA,YAAOvB,KAAKc,MAAME,YAClBK,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACT0C,EAAKrD,MAAME,WAAa,IACxBmD,EAAKvE,MAAMyE,OAAOF,EAAKrD,MAAME,WAAa,EAAG,cAC7CmD,EAAKvD,SAAS,CACVI,WAAYmD,EAAKrD,MAAME,WAAa,OAJhD,cAnFKU,aCoBV4C,oNAhBXxD,MAAQ,2EAKJ,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACgD,EAAD,CAAYF,OAAQrE,KAAKJ,MAAMyE,OAAQD,KAAK,SAC5C/C,EAAAC,EAAAC,cAACgD,EAAD,CAAYF,OAAQrE,KAAKJ,MAAMyE,OAAQD,KAAK,UAC5C/C,EAAAC,EAAAC,cAACgD,EAAD,CAAYF,OAAQrE,KAAKJ,MAAMyE,OAAQD,KAAK,YAC5C/C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQC,QAASzB,KAAKJ,MAAM4E,MAA9C,iBAXG9C,cCqBJ+C,eAvBG,SAAC7E,GACf,OACIyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,gCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,mCAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,oBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,SAA2BH,EAAAC,EAAAC,cAAA,YAAO3B,EAAMiC,OACxCR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,UAA4BH,EAAAC,EAAAC,cAAA,YAAO3B,EAAM8C,QACzCrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,eAAiCH,EAAAC,EAAAC,cAAA,YAAO3B,EAAMoB,cAElDK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,SAA2BH,EAAAC,EAAAC,cAAA,YAAO3B,EAAMyC,KAAKC,MAAQ,GAAK,IAAM1C,EAAMyC,KAAKC,MAAQ1C,EAAMyC,KAAKC,MAAnE,IAA2E1C,EAAMyC,KAAKE,QAAU,GAAK,IAAM3C,EAAMyC,KAAKE,QAAU3C,EAAMyC,KAAKE,QAA3I,IAAqJ3C,EAAMyC,KAAKG,QAAU,GAAK,IAAM5C,EAAMyC,KAAKG,QAAU5C,EAAMyC,KAAKG,UAChPnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAAS,WAChC7B,EAAM8E,UACN9E,EAAM+E,YACN/E,EAAMgF,oBAHV,gBC+FGC,6MAxGb/D,MAAQ,CACNgE,QAAS,QACTjD,KAAM,GACNa,MAAO,GACP1B,WAAY,EACZqB,KAAM,CACJC,MAAO,EACPC,QAAS,EACTC,QAAS,MAIbuC,iBAAmB,WACjBlF,EAAKe,SAAS,CACZkE,QAAS,YAIbE,QAAU,WACRnF,EAAKe,SAAS,CACZkE,QAAS,YAGbG,cAAgB,SAACC,EAAOd,GACT,UAATA,GACFvE,EAAKe,SAAS,CACZ8B,MAAOwC,IAGE,SAATd,GACFvE,EAAKe,SAAS,CACZiB,KAAMqD,IAGG,eAATd,GACFvE,EAAKe,SAAS,CACZI,WAAYkE,OAKlBR,QAAU,WACR7E,EAAKe,SAAS,CACZkE,QAAS,aAGbK,QAAU,WACRtF,EAAKe,SAAS,CACZkE,QAAS,WAIbF,gBAAkB,WAChB/E,EAAKe,SAAS,CACZiB,KAAM,GACNa,MAAO,IACP1B,WAAY,OAIhByC,WAAa,WAAM,IACTpB,EAASxC,EAAKiB,MAAduB,KACa,KAAjBA,EAAKE,SAAmC,KAAjBF,EAAKG,SAC9BH,EAAKC,QACLD,EAAKE,QAAU,EACfF,EAAKG,QAAU,GAES,KAAjBH,EAAKG,SACZH,EAAKE,UACLF,EAAKG,QAAU,GAEZH,EAAKG,UACV3C,EAAKe,SAAS,CAAEyB,YAElBsC,UAAY,WAAM,IACRtC,EAASxC,EAAKiB,MAAduB,KACRA,EAAKE,QAAU,EACfF,EAAKC,MAAQ,EACbD,EAAKG,QAAU,EACf3C,EAAKe,SAAS,CAAEyB,kFAKhB,IAAMyC,EACmB,SAAvB9E,KAAKc,MAAMgE,QAAqBzD,EAAAC,EAAAC,cAAC6D,EAAD,CAAMvB,KAAM7D,KAAKmF,QAASzC,MAAO1C,KAAKc,MAAM4B,MAAOb,KAAM7B,KAAKc,MAAMe,KAAMb,WAAYhB,KAAKc,MAAME,WAAYqB,KAAMrC,KAAKc,MAAMuB,KAAMoB,WAAYzD,KAAKyD,aAC5J,SAAvBzD,KAAKc,MAAMgE,QAAqBzD,EAAAC,EAAAC,cAAC8D,EAAD,CAAMhB,OAAQrE,KAAKiF,cAAeT,KAAMxE,KAAKgF,UACpD,QAAvBhF,KAAKc,MAAMgE,QAAoBzD,EAAAC,EAAAC,cAAC+D,EAAD,CAAWzD,KAAM7B,KAAKc,MAAMe,KACzDa,MAAO1C,KAAKc,MAAM4B,MAClB1B,WAAYhB,KAAKc,MAAME,WAAY0D,QAAS1E,KAAK0E,QACjDrC,KAAMrC,KAAKc,MAAMuB,KACjBsC,UAAW3E,KAAK2E,UAChBC,gBAAiB5E,KAAK4E,kBAEtBvD,EAAAC,EAAAC,cAACgE,EAAD,CAAatB,MAAOjE,KAAK+E,mBACjC,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEZsD,UAnGSpD,aCIE8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b35add89.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './stylesheets/Lever.css'\r\n\r\n\r\n\r\nclass Lever extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isActive: this.props.active,\r\n        }\r\n    }\r\n\r\n    id = this.props.id;\r\n    changeState = this.props.changeState;\r\n\r\n    handleClick = e => {\r\n        e.preventDefault();\r\n        e.target.classList.toggle('active')\r\n        this.setState({ isActive: !this.state.isActive })\r\n        this.changeState(this.id);\r\n        for (let i = 0; i < this.props.complexity; i++) {\r\n            // console.log(this.props.boundaries)\r\n            this.changeState(this.props.boundaries[i]);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        //    this.setState({\r\n        //         isActive\r\n        //     })\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.state.isActive !== this.props.active) {\r\n            this.setState({\r\n                isActive: this.props.active,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const classString = this.state.isActive ? \"alarm active\" : \"alarm\";\r\n        const btnClass = this.state.isActive ? \"button active\" : \"button\";\r\n        return (\r\n            <div className=\"leverobj\">\r\n                <div className=\"alarm\"></div>\r\n                <div className={classString} ></div>\r\n                <div className=\"lever\">\r\n\r\n                    <button onClick={this.handleClick} className={btnClass}></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lever;","import React from 'react';\r\n\r\nimport Lever from './Lever';\r\n\r\nconst ListLevers = (props) => {\r\n    const name = props.size > 16 ? \"listlevers big\" : \"listlevers\";\r\n    return (\r\n        <div className={name}>\r\n            {props.activeList.map((element, id) => <Lever\r\n                key={id}\r\n                id={id}\r\n                active={element}\r\n                changeState={props.changeState} boundaries={props.boundaries[id]}\r\n                complexity={props.complexity}\r\n            />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListLevers;","\r\nimport React from 'react';\r\n\r\nconst Timer = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            <p>{`${props.time.hours < 10 ? \"0\" + props.time.hours : props.time.hours}:${props.time.minutes < 10 ? \"0\" + props.time.minutes : props.time.minutes}:${props.time.seconds < 10 ? \"0\" + props.time.seconds : props.time.seconds}`}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\n\r\nimport './stylesheets/Game.css';\r\nimport './stylesheets/BigGame.css';\r\nimport ListLevers from './ListLevers';\r\nimport Timer from './Timer';\r\n\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        activeList: [],\r\n        complexity: this.props.complexity,\r\n        boundaries: [],\r\n        size: this.props.size,\r\n        chaos: this.props.chaos,\r\n    }\r\n    generateTab = () => {\r\n        const activeList = [];\r\n        for (let i = 0; i < this.state.size; i++)\r\n            activeList.push(true);\r\n        this.setState({ activeList });\r\n    }\r\n\r\n    changeState = (index) => {\r\n        const list = this.state.activeList;\r\n        list[index] = !this.state.activeList[index];\r\n        this.setState({ activeList: list });\r\n    }\r\n    createBoundaries = (index) => {\r\n        const length = this.state.size;\r\n        let boundaries = [];\r\n        for (let i = 0; i < this.state.complexity; i++) {\r\n            let random = index;\r\n            while (random === index)\r\n                random = Math.floor(Math.random() * length)\r\n            boundaries.push(random);\r\n\r\n        }\r\n        return boundaries;\r\n    }\r\n    randomTab = () => {\r\n        let tab = [];\r\n        for (let i = 0; i < this.state.chaos; i++)\r\n            tab.push(Math.floor(Math.random() * this.state.size));\r\n        return tab;\r\n    }\r\n    checkWin = () => {\r\n        for (let i = 0; i < this.state.activeList.length; i++)\r\n            if (this.state.activeList[i] === false)\r\n                return false;\r\n        return true;\r\n    }\r\n    componentWillMount() {\r\n        this.generateTab();\r\n        for (let i = 0; i < this.state.size; i++)\r\n            this.state.boundaries.push(this.createBoundaries(i))\r\n        this.interval = setInterval(this.props.updateTime, 1000);\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        const randomTab = this.randomTab();\r\n        for (let i = 0; i < this.state.chaos; i++) {\r\n            this.changeState(randomTab[i]);\r\n            for (let j = 0; j < this.state.complexity; j++) {\r\n                this.changeState(this.state.boundaries[randomTab[i]][j])\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.checkWin()) {\r\n            clearInterval(this.interval);\r\n            setTimeout(this.props.endF, 3000);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <Timer time={this.props.time} />\r\n                <p className=\"objective\">Tip: Activate all the levers</p>\r\n                <ListLevers\r\n                    changeState={this.changeState}\r\n                    activeList={this.state.activeList}\r\n                    boundaries={this.state.boundaries}\r\n                    complexity={this.state.complexity}\r\n                    size={this.state.size}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\nimport './stylesheets/StartWindow.css';\r\n\r\n\r\n\r\n\r\nconst StartWindow = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Welcome to Enigma</h1>\r\n            <h2>Brain Capability Test by H4kan</h2>\r\n            <button\r\n                onClick={props.click}\r\n                className='play'>\r\n\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartWindow;","\r\nimport React, { Component } from 'react';\r\n\r\nclass Controller extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            size: 16,\r\n            chaos: 50,\r\n            complexity: 2,\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n        if (this.props.type === 'size')\r\n            return (\r\n\r\n                <section>\r\n                    <p>Size: </p>\r\n                    <div className=\"control\">\r\n                        <button onClick={() => {\r\n                            if (this.state.size > 9) {\r\n                                this.props.setter(this.state.size - 1, 'size');\r\n                                this.setState({\r\n                                    size: this.state.size - 1,\r\n                                })\r\n                            }\r\n                        }\r\n                        }>-</button>\r\n                        <span>{this.state.size}</span>\r\n                        <button onClick={() => {\r\n                            if (this.state.size < 25) {\r\n                                this.props.setter(this.state.size + 1, 'size');\r\n                                this.setState({\r\n                                    size: this.state.size + 1,\r\n                                })\r\n                            }\r\n                        }\r\n                        }>+</button>\r\n                    </div>\r\n                </section >\r\n            );\r\n        else if (this.props.type === 'chaos')\r\n            return (\r\n\r\n                <section>\r\n                    <p>Chaos:</p>\r\n                    <div className=\"control\">\r\n                        <button onClick={() => {\r\n                            if (this.state.chaos > 20) {\r\n                                this.props.setter(this.state.chaos - 5, 'chaos');\r\n                                this.setState({\r\n                                    chaos: this.state.chaos - 5,\r\n                                });\r\n                            }\r\n                        }\r\n                        }>-</button>\r\n                        <span>{this.state.chaos}</span>\r\n                        <button onClick={() => {\r\n                            if (this.state.chaos < 2000) {\r\n                                this.props.setter(this.state.chaos + 5, 'chaos');\r\n                                this.setState({\r\n                                    chaos: this.state.chaos + 5,\r\n                                })\r\n                            }\r\n                        }\r\n                        }>+</button>\r\n                    </div>\r\n                </section>\r\n            );\r\n        else return (\r\n\r\n            <section>\r\n                <p>Complexity:</p>\r\n                <div className=\"control\">\r\n                    <button onClick={() => {\r\n                        if (this.state.complexity > 2) {\r\n                            this.props.setter(this.state.complexity - 1, 'complexity');\r\n                            this.setState({\r\n                                complexity: this.state.complexity - 1,\r\n                            })\r\n                        }\r\n                    }}>-</button>\r\n                    <span>{this.state.complexity}</span>\r\n                    <button onClick={() => {\r\n                        if (this.state.complexity < 7) {\r\n                            this.props.setter(this.state.complexity + 1, 'complexity');\r\n                            this.setState({\r\n                                complexity: this.state.complexity + 1,\r\n                            })\r\n                        }\r\n                    }\r\n                    }>+</button>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Controller;","\r\nimport React, { Component } from 'react';\r\n\r\nimport Controller from './Controller';\r\nimport './stylesheets/Menu.css';\r\n\r\nclass Menu extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='menu'>\r\n                <Controller setter={this.props.setter} type='size' />\r\n                <Controller setter={this.props.setter} type='chaos' />\r\n                <Controller setter={this.props.setter} type='complex' />\r\n                <button className='start' onClick={this.props.init}>Start</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nimport './stylesheets/EndWindow.css'\r\n\r\nconst EndWindow = (props) => {\r\n    return (\r\n        <div className=\"end\">\r\n            <div>\r\n                <h1 className=\"gratz\">Thank you for playing Enigma</h1>\r\n                <h3 className='gratz'>Brain Capability Test by H4kan</h3>\r\n            </div>\r\n            <div className=\"score\">\r\n                <h4 className=\"gratz\">Your statistics:</h4>\r\n                <p className=\"gratz\">Size: <span>{props.size}</span></p>\r\n                <p className=\"gratz\">Chaos: <span>{props.chaos}</span></p>\r\n                <p className=\"gratz\">Complexity: <span>{props.complexity}</span></p>\r\n            </div>\r\n            <p className=\"gratz\">Time: <span>{props.time.hours < 10 ? \"0\" + props.time.hours : props.time.hours}:{props.time.minutes < 10 ? \"0\" + props.time.minutes : props.time.minutes}:{props.time.seconds < 10 ? \"0\" + props.time.seconds : props.time.seconds}</span></p>\r\n            <button className=\"return\" onClick={() => {\r\n                props.restart();\r\n                props.resetTime();\r\n                props.resetParameters();\r\n            }}>Try again</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EndWindow;","import React, { Component } from 'react';\n\nimport Game from './Game';\nimport StartWindow from './StartWindow';\nimport Menu from './Menu';\nimport './stylesheets/App.css';\nimport EndWindow from './EndWindow';\n\nclass App extends Component {\n  state = {\n    display: 'start',\n    size: 16,\n    chaos: 50,\n    complexity: 2,\n    time: {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    },\n  }\n\n  handleStartClick = () => {\n    this.setState({\n      display: 'menu',\n    })\n\n  }\n  setPlay = () => {\n    this.setState({\n      display: 'game',\n    })\n  }\n  setParameters = (param, type) => {\n    if (type === \"chaos\")\n      this.setState({\n        chaos: param,\n\n      })\n    if (type === 'size')\n      this.setState({\n        size: param,\n\n      })\n    if (type === 'complexity')\n      this.setState({\n        complexity: param,\n\n      })\n    // console.log('wywołano setParameters')\n  }\n  restart = () => {\n    this.setState({\n      display: 'start'\n    })\n  }\n  endGame = () => {\n    this.setState({\n      display: 'end',\n\n    })\n  }\n  resetParameters = () => {\n    this.setState({\n      size: 16,\n      chaos: 150,\n      complexity: 3,\n    })\n\n  }\n  updateTime = () => {\n    const { time } = this.state;\n    if (time.minutes === 59 && time.seconds === 59) {\n      time.hours++;\n      time.minutes = 0;\n      time.seconds = 0;\n    }\n    else if (time.seconds === 59) {\n      time.minutes++;\n      time.seconds = 0;\n    }\n    else time.seconds++;\n    this.setState({ time });\n  }\n  resetTime = () => {\n    const { time } = this.state;\n    time.minutes = 0;\n    time.hours = 0;\n    time.seconds = 0;\n    this.setState({ time });\n  }\n\n  render() {\n\n    const display =\n      this.state.display === 'game' ? <Game endF={this.endGame} chaos={this.state.chaos} size={this.state.size} complexity={this.state.complexity} time={this.state.time} updateTime={this.updateTime} /> :\n        this.state.display === 'menu' ? <Menu setter={this.setParameters} init={this.setPlay} /> :\n          this.state.display === 'end' ? <EndWindow size={this.state.size}\n            chaos={this.state.chaos}\n            complexity={this.state.complexity} restart={this.restart}\n            time={this.state.time}\n            resetTime={this.resetTime}\n            resetParameters={this.resetParameters}\n          /> :\n            <StartWindow click={this.handleStartClick} />;\n    return (\n      <div className=\"application\">\n\n        {display}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}